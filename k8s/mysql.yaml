apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: prod
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "vault-role"
        vault.hashicorp.com/agent-inject-secret-MYSQL_ROOT_PASSWORD: "secret/data/mysql"
        vault.hashicorp.com/agent-inject-template-MYSQL_ROOT_PASSWORD: |
          {{- with secret "secret/data/mysql" -}}
          export MYSQL_ROOT_PASSWORD="{{ .Data.data.MYSQL_ROOT_PASSWORD }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-MYSQL_DATABASE: "secret/data/mysql"
        vault.hashicorp.com/agent-inject-template-MYSQL_DATABASE: |
          {{- with secret "secret/data/mysql" -}}
          export MYSQL_DATABASE="{{ .Data.data.MYSQL_DATABASE }}"
          {{- end }}
        # Include CA configMap injection
        vault.hashicorp.com/agent-inject-configmap: "vault-ca-cert"
        vault.hashicorp.com/agent-inject-mount: "/vault/ca"
    spec:
      serviceAccountName: vault-auth
      containers:
      - name: mysql
        image: mysql:8
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo 'Waiting for Vault secrets...'
            while [ ! -s /vault/secrets/mysql_root_password ]; do sleep 2; done
            while [ ! -s /vault/secrets/mysql_database ]; do sleep 2; done

            chmod 600 /vault/secrets/mysql_root_password
            chmod 600 /vault/secrets/mysql_database

            source /vault/secrets/mysql_root_password
            source /vault/secrets/mysql_database

            echo "Secrets loaded: MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD, MYSQL_DATABASE=$MYSQL_DATABASE"

            export MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
            export MYSQL_DATABASE=$MYSQL_DATABASE

            exec docker-entrypoint.sh mysqld
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
        - mountPath: /vault/ca
          name: vault-ca
          readOnly: true
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: vault-ca
        configMap:
          name: vault-ca-cert

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: ebs-csi-sc
---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: prod
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306


