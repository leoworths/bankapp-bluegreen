apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: prod
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "vault-role"
        vault.hashicorp.com/agent-inject-secret-MYSQL_ROOT_PASSWORD: "secret/data/mysql"
        vault.hashicorp.com/agent-inject-template-MYSQL_ROOT_PASSWORD: |
          {{- with secret "secret/data/mysql" -}}
          export MYSQL_ROOT_PASSWORD="{{ .Data.data.MYSQL_ROOT_PASSWORD }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-MYSQL_DATABASE: "secret/data/mysql"
        vault.hashicorp.com/agent-inject-template-MYSQL_DATABASE: |
          {{- with secret "secret/data/mysql" -}}
          export MYSQL_DATABASE="{{ .Data.data.MYSQL_DATABASE }}"
          {{- end }}
        # TLS trust settings
        vault.hashicorp.com/agent-inject-configmap: "vault-ca-cert"
        vault.hashicorp.com/agent-inject-mount: "/vault/ca"
        vault.hashicorp.com/agent-inject-mount: "/vault/secrets"
    spec:
      serviceAccountName: vault-auth
      containers:
        - name: mysql
          image: mysql:8.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: vault-ca
              mountPath: /vault/ca
              readOnly: true
          resources:
            requests:
              memory: "1Gi"
              cpu: "256m"
            limits:
              memory: "2Gi"
              cpu: "500m"
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Waiting for Vault secrets to be injected..."
              while [ ! -s /vault/secrets/mysql_root_password ]; do sleep 1; done
              while [ ! -s /vault/secrets/mysql_database ]; do sleep 1; done

              source /vault/secrets/mysql_root_password
              source /vault/secrets/mysql_database

              echo "Starting MySQL server with injected secrets..."
              export MYSQL_ROOT_PASSWORD="$MYSQL_ROOT_PASSWORD"
              export MYSQL_DATABASE="$MYSQL_DATABASE"
              exec docker-entrypoint.sh mysqld 
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: vault-ca
          configMap:
            name: vault-ca-cert
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: ebs-csi-sc
---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: prod
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306


